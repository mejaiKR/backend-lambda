openapi: "3.0.1"
info:
  title: "MejaiAPI"
  description: "환영합니다! [Mejai.gg](https://example.com)는 League of Legends의 게임 데이터를\
    \ 분석하여 사용자에게 통계를 제공하는 서비스입니다. 이 API 문서는 Mejai.gg의 API를 사용하는 방법을 설명합니다.\n#### 지\
    원 및 문의 - API 사용 중에 문제가 발생하거나 추가적인 지원이 필요한 경우, 지원 페이지에서 도움을 받을 수 있습니다. - 새로운 기능\
    \ 제안이나 버그 리포트는 리포지토리를 통해 제출해 주세요.\n#### API 작성에 참고한 문서: - [Google API design guide](https://cloud.google.com/apis/design)\n"
  contact:
    email: "wnddms12345@gmail.com"
  version: "0.0.1"
externalDocs:
  description: "Find out more about Mejai GG"
  url: "http://example.com"
servers:
- url: "https://ug9bgowsd1.execute-api.ap-northeast-2.amazonaws.com/{basePath}"
  variables:
    basePath:
      default: "mejai-v2"
paths:
  /api/v2/users/renewal/profile:
    post:
      tags:
      - "Users"
      summary: "유저 프로필 업데이트 요청"
      description: "유저의 프로필 정보 업데이트 요청을 보냅니다. (SQS로 전송)"
      operationId: "updateUserProfile"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserIdentifier"
        required: true
      responses:
        "202":
          description: "프로필 업데이트 요청 성공"
          content: {}
        "400":
          description: "보낸 형식이 잘못됨."
          content: {}
        "500":
          description: "서버 내부 오류(aws sqs 전송 실패)"
          content: {}
  /api/v2/renewal-status/profile:
    get:
      tags:
      - "Users"
      summary: "프로필 업데이트 상태 조회"
      description: |
        프로필 업데이트 요청의 상태를 조회합니다.  
        - 사용법:  
        /users/renewal/profile 요청을 보낸 후, 해당 요청의 상태를 조회할 수 있습니다.  
        /users/profile 요청에서 가져온 lastUpdated 값과 비교하여 최신화 되었으면 업데이트가 완료된 상태입니다.  
        최신화 될 때 까지 몇초에 한 번 요청을 보내어 상태를 확인하면 됩니다.  
        너무 오랜 기간동안 업데이트가 완료되지 않는다면, 다시 요청을 보내달란 메시지를 보여주세요.
      operationId: "getRenewalStatusProfile"
      parameters:
      - name: "tag"
        in: "query"
        description: "소환사 태그"
        schema:
          type: "string"
      - name: "id"
        in: "query"
        description: "소환사 아이디"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "기타 오류"
          content: {}
        "404":
          description: "해당 소환사 정보 찾을 수 없음"
          content: {}
        "200":
          description: "프로필 업데이트 상태 조회 성공"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RenewalStatus"
  /api/v2/renewal-status/streak:
    get:
      tags:
      - "Users"
      summary: "스트릭 업데이트 상태 조회"
      description: |
        스트릭 업데이트 요청의 상태를 조회합니다.  
        - 사용법:  
        /users/renewal/streak 요청을 보낸 후, 해당 요청의 상태를 조회할 수 있습니다.  
        /users/streak 요청에서 가져온 lastUpdated 값과 비교하여 최신화 되었으면 업데이트가 완료된 상태입니다.  
        최신화 될 때 까지 몇초에 한 번 요청을 보내어 상태를 확인하면 됩니다.  
        너무 오랜 기간동안 업데이트가 완료되지 않는다면, 다시 요청을 보내달란 메시지를 보여주세요.
      operationId: "getRenewalStatusStreak"
      parameters:
      - name: "year"
        in: "query"
        description: "조회 시작 연도"
        required: true
        schema:
          type: "string"
      - name: "tag"
        in: "query"
        description: "소환사 태그"
        schema:
          type: "string"
      - name: "month"
        in: "query"
        description: "조회 시작 월"
        required: true
        schema:
          type: "string"
      - name: "id"
        in: "query"
        description: "소환사 아이디"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "기타 오류"
          content: {}
        "404":
          description: "해당 소환사 정보 찾을 수 없음"
          content: {}
        "200":
          description: "스트릭 업데이트 상태 조회 성공"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RenewalStatus"
  /api/v2/users/profile:
    get:
      tags:
      - "Users"
      summary: "소환사 정보 조회 (v2)"
      description: "주어진 소환사 ID와 태그를 사용하여 소환사의 프로필 정보를 조회합니다.\n"
      operationId: "getUsersProfileV2"
      parameters:
      - name: "tag"
        in: "query"
        description: "소환사 태그"
        schema:
          type: "string"
      - name: "id"
        in: "query"
        description: "소환사 아이디"
        required: true
        schema:
          type: "string"
      responses:
        "404":
          description: "해당 소환사가 라이엇에 등록되어 있지 않음"
          content: {}
        "200":
          description: "소환사 정보 조회 성공"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfile"
        "429":
          description: "라이엇 API 요청 제한 초과"
          content: {}
        "400":
          description: "기타 오류"
          content: {}
        "500":
          description: "서버 내부 오류"
          content: {}
  /api/v2/users/streak:
    get:
      tags:
      - "Users"
      summary: "소환사 게임 스트릭 조회 (v2)"
      description: "주어진 소환사 ID, 태그, 조회 시작 날짜, 조회 종료 날짜를 사용하여 소환사가 특정 기간 동안 진행한 게임의\
        \ 총 횟수를 조회합니다.\n"
      operationId: "getUserGameCountsV2"
      parameters:
      - name: "year"
        in: "query"
        description: "조회 시작 연도"
        required: true
        schema:
          type: "string"
      - name: "tag"
        in: "query"
        description: "소환사 태그"
        schema:
          type: "string"
      - name: "month"
        in: "query"
        description: "조회 시작 월"
        required: true
        schema:
          type: "string"
      - name: "id"
        in: "query"
        description: "소환사 아이디"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "기타 오류"
          content: {}
        "404":
          description: "해당 소환사 정보 찾을 수 없음"
          content: {}
        "200":
          description: "소환사 게임 스트릭 조회 성공"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArrayOfUserGameCount"
  /api/v2/users/search:
    get:
      tags:
        - "Users"
      summary: "검색어와 일치하는 이름을 가진 소환사 조회"
      description: |
        검색어와 일치하는 이름을 가진 소환사를 조회합니다.  
        - 사용법:  
        검색어를 입력하면, 검색어와 일치하는 이름을 가진 소환사를 count만큼 조회합니다.  
        검색어는 소환사 이름의 일부분이어도 상관없습니다.
      operationId: "getUserSearchV2"
      parameters:
        - name: "id"
          in: "query"
          description: "소환사 아이디"
          required: true
          schema:
            type: "string"
        - name: "count"
          in: "query"
          description: "조회할 결과 갯수"
          required: false
          schema:
            type: "integer"
            default: 5
      responses:
        "400":
          description: "기타 오류"
          content: {}
        "404":
          description: "해당 소환사 정보 찾을 수 없음"
          content: {}
        "200":
          description: "조회 성공"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/UserIdentifier"
  /api/v2/users/renewal/streak:
    post:
      tags:
      - "Users"
      summary: "유저 스트릭 업데이트 요청"
      description: "유저의 스트릭 정보 업데이트 요청을 보냅니다. (SQS로 전송)"
      operationId: "updateUserStreak"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserStreakUpdate"
        required: true
      responses:
        "201":
          description: "스트릭 업데이트 성공"
          content: {}
        "400":
          description: "기타 오류"
          content: {}
        "500":
          description: "서버 내부 오류(aws sqs 전송 실패)"
          content: {}
  /api/v2/ranking:
    get:
      tags:
      - "Ranking"
      summary: "특정 월의 랭킹 조회"
      description: "주어진 연도와 월을 기준으로 랭킹을 조회합니다.\n"
      operationId: "getRanking"
      parameters:
      - name: "year"
        in: "query"
        description: "조회 시작 연도"
        required: true
        schema:
          type: "string"
      - name: "month"
        in: "query"
        description: "조회 시작 월"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "기타 오류"
          content: {}
        "404":
          description: "해당 랭킹 정보 찾을 수 없음"
          content: {}
        "200":
          description: "랭킹 조회 성공"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MonthlyRanking"
components:
  schemas:
    UserProfile:
      type: "object"
      properties:
        summonerName:
          type: "string"
          description: "소환사 이름"
        tagLine:
          type: "string"
          description: "소환사 태그라인"
        profileIcon:
          type: "string"
          description: "소환사 프로필 이미지 URL"
          format: "uri"
        level:
          type: "integer"
          description: "소환사 레벨"
        flexRank:
            $ref: "#/components/schemas/Rank"
        soloRank:
            $ref: "#/components/schemas/Rank"
        lastUpdateAt:
          type: "string"
          description: "마지막 업데이트 시간"
          format: "date-time"
    Rank:
      type: "object"
      properties:
        tier:
          type: "string"
          description: "티어"
        tierIcon:
          type: "string"
          description: "티어 아이콘 이미지 URL"
          format: "uri"
        rank:
          type: "string"
          description: "랭크"
        leaguePoints:
          type: "integer"
          description: "리그 포인트"
        wins:
          type: "integer"
          description: "승리 횟수"
        losses:
          type: "integer"
          description: "패배 횟수"
    RenewalStatus:
      type: "object"
      properties:
        lastUpdateAt:
          type: "string"
          description: "마지막 업데이트 시간"
          format: "date-time"
    MonthlyRanking:
      type: "object"
      properties:
        ranking:
          type: "array"
          items:
            type: "object"
            properties:
              summonerName:
                type: "string"
              tagLine:
                type: "string"
              totalGameCount:
                type: "integer"
                format: "int32"
    UserStreakUpdate:
      type: "object"
      properties:
        id:
          type: "string"
        tag:
          type: "string"
        year:
          type: "integer"
          format: "int32"
        month:
          type: "integer"
          format: "int32"
    UserIdentifier:
      required:
      - "id"
      type: "object"
      properties:
        id:
          type: "string"
        tag:
          type: "string"
    ArrayOfUserGameCount:
      type: "object"
      properties:
        userGameCounts:
          type: "array"
          items:
            $ref: "#/components/schemas/UserGameCount"
        lastUpdatedAt:
          type: "string"
          description: "마지막 업데이트 시간"
          format: "date-time"
    UserGameCount:
      type: "object"
      properties:
        date:
          type: "string"
          description: "게임한 날짜"
          format: "date"
        gameCount:
          type: "integer"
          description: "해당 날짜에 진행된 총 게임 횟수"
        imageUrl:
          type: "string"
          description: "해당 날짜에 진행된 판수에 맞는 메자이 이미지"
          format: "uri"
